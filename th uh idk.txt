local System = require(script.Parent)
local Animations = System.Animations
local Sounds = System.Sounds
local Enums = System.Enums
local Util = System.Util

local Action = Enums.Action
local SurfaceClass = Enums.SurfaceClass

local AirStep = Enums.AirStep
local MarioEyes = Enums.MarioEyes
local InputFlags = Enums.InputFlags
local MarioFlags = Enums.MarioFlags
local ParticleFlags = Enums.ParticleFlags

local InteractionStatus = Enums.Interaction.Status
local InteractionSubtype = Enums.Interaction.Subtype

type Mario = System.Mario

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Helpers
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

warn('TODO::: replace old findMarioAnimFlagsAndTranslation and updateMarioPosForAnim code')

local ANIM_FLAG_HOR_TRANS = 1
local ANIM_FLAG_VERT_TRANS = 2
local ANIM_FLAG_6 = 4

local transformations = require(script:WaitForChild('transformations'))
-- not 100% accurate, but does exactly what i need it to do
function wrapAngle(n) -- wrap a number to be between -0x8000 and 0x8000
	if n < -0x8000 then
		return n + 0x10000
	elseif n > 0x8000 then
		return n - 0x10000
	end
	return n
	--return ((result + 0x8000) % 0x10000) - 0x8000
end
function System.findMarioAnimFlagsAndTranslation	(m: Mario, yaw: number)--, traslation: Vector3| Vector3int16)
	local AnimCurrent = m.AnimCurrent
	local AnimFrame = m.AnimFrame

	yaw = wrapAngle(yaw + 0x8000) -- NOT IN THE ORIGINAL C CODE

	local s = Util.Sins(yaw)
	local c = Util.Coss(yaw)

	local translation = transformations[AnimCurrent][AnimFrame]

	local dx = translation.X
	local dz = translation.Z
	local newTranslation = Vector3.new(
		(dx * c) + (dz * s),
		translation.Y,
		(-dx * s) + (dz * c)
	)

	return newTranslation, 0 -- TODO: add flags
end

function System.updateMarioPosForAnim(m: Mario)
	--[[ TODO: FLAGS!
	local translation, flags = {0, 0, 0}
	local flags = m:find_mario_anim_flags_and_translation(m.FaceAngle.Y, translation)
	local translation = Vector3.new(table.unpack(translation))]]
	local translation, flags = m:findMarioAnimFlagsAndTranslation(m.FaceAngle.Y)

	-- TODOL implement flags for horizontal and vertical translations
	-- i just only needed horizontal translations so i didnt do this
	if true then --bit32.btest(flags, bit32.bor(ANIM_FLAG_HOR_TRANS, ANIM_FLAG_6)) then
		m.GfxPos = Util.SetY(-translation, 0)
		m.GfxAngle = Vector3int16.new(0, m.FaceAngle.Y, 0)
		m.Position = Util.SetY(m.Position + translation, m.Position.Y)
	end

	if false then
		m.GfxPos = Util.SetY(Vector3.zero, -translation.Y)
		m.Position = Util.SetY(m.Position, m.Position.Y + translation.Y)
	end
end

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Actions
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

local AIR_STEP_CHECK_BOTH = bit32.bor(AirStep.CHECK_LEDGE_GRAB, AirStep.CHECK_HANG)
local DEF_ACTION: (number, (Mario) -> boolean) -> () = System.RegisterAction

local function act_going_through_door(m: Mario)
	local InteractObj = (m :: any).InteractObj -- an object/pseudo
	local UsedObj = (m :: any).UsedObj -- an object/pseudo


	if m.ActionTimer == 0 then
		if m.ActionArg == 1 then
			InteractObj.InteractStatus:Set(InteractionStatus.UNK16)
			m:SetAnimation(Animations.PULL_DOOR_WALK_IN)
		else
			InteractObj.InteractStatus:Set(InteractionStatus.UNK17)
			m:SetAnimation(Animations.PUSH_DOOR_WALK_IN)
		end
		--[[ Set animation to pull door and update interact object status

		InteractObj.oInteractStatus = InteractionStatus.UNK16
		m:SetAnimation(Animations.PULL_DOOR_WALK_IN)]]
	end

	-- Align Mario with the door and update position
	--TODO: set mario's face angle
	-- m->faceAngle[1] = m->usedObj->oMoveAngleYaw;
	--print(UsedObj.MoveAngleYaw)
	m.FaceAngle = Util.SetY(m.FaceAngle, UsedObj.MoveAngleYaw)
	m.Position = Util.SetY(UsedObj.Position, m.Position.Y) --Vector3.new(usedObjPos.X, m.Position.Y, usedObjPos.Z)
	--m.Pos[0] = UsedObj.oPosX
	--m.Pos[2] = UsedObj.oPosZ
	
	
	
	-- update marios position based on the animation
	-- TODO:
	--updateMarioPosForAnim(m)
	m:updateMarioPosForAnim()
	m:StopAndSetHeightToFloor()
	
	-- Trigger warp or finish action based on condition
	if m.ActionArg == 4 then
		if m.ActionTimer == 16 then
			-- WARP_OP_WARP_DOOR
			--levelTriggerWarp(m, WarpOp.WarpDoor)
		end
	elseif m:IsAnimAtEnd() then
		if m.ActionArg == 2 then
			-- TODO

			-- unported code
			--m->faceAngle[1] += 0x8000;
			--m.FaceAngle[2] = m.FaceAngle[2] + 0x8000
			m.FaceAngle = Util.SetY(m.FaceAngle, m.FaceAngle.Y + 0x8000)
		end
		m:SetAction(Action.IDLE)
		m.GfxPos = Vector3.zero
		m.GfxAngle = Vector3int16.new()
	end

	m.ActionTimer = m.ActionTimer + 1
	return false
end

DEF_ACTION(Action.PULLING_DOOR, act_going_through_door)
DEF_ACTION(Action.PUSHING_DOOR, act_going_through_door)

--[[DEF_ACTION(Action.PUSHING_DOOR, function(m: Mario)
	-- You can set an animation, sound, or logic specific to pushing the door here.
	local anim = Animations.p
	commonGroundActionStep(m, Action.PUSHING_DOOR, anim)

	-- Optionally, set the Mario state for door opening
	if m.Position then
		m:SetAction(Action.DOOR_OPEN)
	end

	return false
end)

-- Pulling the door action
DEF_ACTION(Action.PULLING_DOOR, function(m: Mario)
	-- You can set an animation, sound, or logic specific to pulling the door here.
	local anim = Animations.PULLING_DOOR
	commonGroundActionStep(m, Action.PULLING_DOOR, anim)

	-- Optionally, set the Mario state for door opening
	if m.Position then
		m:SetAction(Action.DOOR_OPEN)
	end

	return false
end)]]

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- find_mario_anim_flags_and_translation but a million times faker
local Animations = require(script.Parent.Parent.Parent.Animations)

local transformations = {
	[Animations.PUSH_DOOR_WALK_IN] = require(script:WaitForChild('pushdoorwalkin')),
	[Animations.PULL_DOOR_WALK_IN] = require(script:WaitForChild('pulldoorwalkin'))
}

setmetatable(transformations, {
	__index = function(key)
		print('nothing for key!')
		return setmetatable({}, {__index = function()
			return Vector3.zero
		end,})
	end,
})

return transformations
pull doorwalk in = v=Vector3.new;return{[0]=v(0,59.42697525024414,0),v(-0.11749997735023499,48.853939056396484,51.699989318847656),v(-1.7859996557235718,43.36959457397461,103.39999389648438),v(-5.075998783111572,49.34999084472656,124.07997131347656),v(-10.998000144958496,51.04198455810547,124.07997131347656),v(-14.522997856140137,51.746986389160156,123.93897247314453),v(-20.41679573059082,52.87498474121094,123.71337127685547),v(-28.82039451599121,54.25678634643555,123.34676361083984),v(-38.88779067993164,55.638587951660156,122.75457000732422),v(-51.97260284423828,56.23078155517578,120.69598388671875),v(-64.57799530029297,55.04638671875,115.45077514648438),v(-75.29399108886719,52.45198059082031,108.14697265625),v(-82.7951889038086,50.30878448486328,102.59156799316406),v(-90.239990234375,48.503990173339844,97.85399627685547),v(-93.68038177490234,50.111392974853516,100.70218658447266),v(-93.9059829711914,50.90099334716797,103.07099151611328),v(-94.2725830078125,51.88798904418945,107.97779083251953),v(-94.55457305908203,51.83158874511719,113.11017608642578),v(-95.14678192138672,51.43678665161133,117.25558471679688),v(-98.2769775390625,50.53438186645508,121.00617218017578),v(-103.8323745727539,49.2935905456543,124.58757019042969),v(-105.74996948242188,48.814186096191406,125.54637145996094),v(-107.72396850585938,48.221988677978516,126.3359603881836),v(-106.28578186035156,48.84238815307617,126.89996337890625),v(-104.1143798828125,49.23719024658203,126.89996337890625),v(-101.29438018798828,50.02678680419922,125.88478088378906),v(-98.36158752441406,50.70358657836914,123.51598358154297),v(-95.54158782958984,51.098384857177734,120.30118560791016),v(-93.05999755859375,51.32398223876953,117.593994140625),v(-90.57839965820312,51.3239860534668,116.46598815917969),v(-87.08160400390625,51.3239860534668,113.30760955810547),v(-82.23121643066406,51.211185455322266,107.32923126220703),v(-76.1964340209961,50.9291877746582,98.6436538696289),v(-69.654052734375,50.477996826171875,88.26608276367188),v(-63.337249755859375,50.28059005737305,78.79088592529297),v(-55.38483428955078,50.36518859863281,67.28526306152344),v(-48.165653228759766,50.92918395996094,57.81006622314453),v(-40.608070373535156,52.000770568847656,48.84248352050781),v(-32.712074279785156,53.5799674987793,40.04408264160156),v(-25.267274856567383,54.933570861816406,31.245689392089844),v(-19.74005889892578,55.553985595703125,23.406089782714844),v(-14.156437873840332,55.04640579223633,13.141297340393066),v(-10.659624099731445,53.241615295410156,4.117289066314697),v(-8.178024291992188,50.76001739501953,-4.229909420013428),v(-6.373222827911377,48.50401306152344,-13.479470252990723),v(-4.230031490325928,47.26320266723633,-24.590225219726562),v(-1.7484285831451416,48.955142974853516,-38.126224517822266),v(0.9587688446044922,52.959556579589844,-53.35421371459961),v(3.6659603118896484,56.11793899536133,-68.24376678466797),v(4.79398250579834,53.862022399902344,-82.90776824951172),v(5.245195388793945,50.760040283203125,-97.91016387939453),v(5.357998371124268,48.27841567993164,-113.36372375488281),v(5.301602363586426,47.8835334777832,-128.4789276123047),v(5.076003074645996,51.04193115234375,-141.56373596191406),v(5.075998783111572,55.32832717895508,-153.5205841064453),v(5.583587646484375,56.56917953491211,-169.70726013183594),v(6.37318229675293,54.87725067138672,-190.5751190185547),v(7.2755818367004395,51.54963302612305,-214.31956481933594),v(8.17798137664795,49.06803512573242,-236.87953186035156)}
pushdoorwalkin = v=Vector3.new;return{[0]=v(0,57.26744079589844,0),v(-2.1797376970456368e-23,49.630184173583984,-33.839988708496094),v(0.7563161849975586,40.121307373046875,-81.57279968261719),v(1.9222017526626587,48.652462005615234,-104.0060806274414),v(3.0479018688201904,49.082950592041016,-104.63693237304688),v(4.511999130249023,49.745941162109375,-104.69219207763672),v(4.511999130249023,50.408931732177734,-101.81924438476562),v(1.7863823175430298,50.81869125366211,-95.38734436035156),v(-3.0133726596832275,51.31593322753906,-85.34123229980469),v(-10.016182899475098,51.76483154296875,-71.49446105957031),v(-13.866345405578613,52.015750885009766,-63.7469367980957),v(-17.927141189575195,52.59586715698242,-54.85185623168945),v(-23.148174285888672,54.15205001831055,-43.61788558959961),v(-27.861604690551758,55.892391204833984,-32.09156036376953),v(-31.082155227661133,57.11477279663086,-21.812944412231445),v(-32.616451263427734,57.38525390625,-11.694334983825684),v(-31.069482803344727,55.64491653442383,-2.9926395416259766),v(-28.044605255126953,53.11727523803711,6.952164649963379),v(-26.334190368652344,51.88798904418945,19.383174896240234),v(-26.56439208984375,51.88798904418945,29.44078254699707),v(-27.12378692626953,51.318241119384766,39.65837478637695),v(-27.31715965270996,49.19115447998047,48.74681854248047),v(-25.678119659423828,49.55946731567383,56.53691101074219),v(-22.934083938598633,52.739723205566406,70.81875610351562),v(-22.188215255737305,55.605770111083984,81.20555877685547),v(-21.99484634399414,57.514190673828125,90.29400634765625),v(-21.74622344970703,54.5307502746582,101.97915649414062),v(-21.552852630615234,51.565731048583984,111.22872924804688),v(-21.331857681274414,49.43171310424805,121.8365249633789),v(-21.08323860168457,49.335018157958984,133.7035369873047),v(-20.86224365234375,50.25926971435547,144.09609985351562),v(-20.668869018554688,52.386356353759766,153.3779296875),v(-20.447874069213867,54.955440521240234,163.84765625),v(-20.094511032104492,57.519920349121094,175.53282165527344),v(-19.565046310424805,58.937984466552734,185.9196014404297),v(-18.681062698364258,58.937984466552734,196.30641174316406),v(-17.55536460876465,57.3530387878418,205.2187957763672),v(-15.768987655639648,55.13387680053711,215.38458251953125),v(-13.364502906799316,52.72593307495117,226.73941040039062),v(-11.458410263061523,51.36541748046875,236.6842041015625),v(-10.353428840637207,51.80741882324219,246.62904357910156),v(-9.998912811279297,52.80649948120117,255.3307647705078),v(-9.869998931884766,54.132469177246094,265.0914001464844),v(-9.928698539733887,55.56549072265625,275.7820739746094),v(-10.149694442749023,56.67046356201172,285.2848815917969),v(-10.370692253112793,56.90067672729492,294.5690612792969),v(-10.749378204345703,55.22939682006836,303.6932373046875),v(-11.191370010375977,52.12162399291992,312.6573791503906),v(-11.633362770080566,48.39347839355469,321.4615173339844),v(-12.07535457611084,45.9625244140625,330.0804138183594)}
